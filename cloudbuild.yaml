#Execute SAST Scan using SonarCloud in GCP DevSecOps Pipeline
  steps:
  # Step 1: Build your application
  - name: 'gcr.io/cloud-builders/mvn:3.9.1'
    args: ['clean', 'install']

  # Step 2: Run SonarCloud analysis
  - name: 'sonarsource/sonar-scanner-cli'
    args: ['-Dsonar.projectKey=nishyman10_Demo.Test', '-Dsonar.organization=nishyman10', '-Dsonar.sources=src', '-Dsonar.host.url=https://sonarcloud.io', '-Dsonar.login=6c0d9d20da6baf91f6336fb4e3208033e75e481b']

artifacts:
  # Define your build artifacts here, if any

#Run Software Composition Analysis (SCA security scan) using Snyk in GCP DevSecOps Pipeline
  - name: 'ubuntu'
    entrypoint: bash
    args: 
        - '-c'
        - |-
          apt-get update
          apt-get -y install maven 
          SNYK_TOKEN=${_SNYK_TOKEN}
          export SNYK_TOKEN
          mvn snyk:test -fn 
    id: SCA Scan using Snyk in GCP DevSecOps Pipeline

#Run DAST scan using OWASP ZAP in GCP DevSecOps Pipeline
  - name: 'ubuntu'
    entrypoint: bash
    args: 
      - '-c'
      - |-
        apt-get update
        apt-get -y install wget
        apt-get -y install default-jdk
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
        mkdir zap
        tar -xvf ZAP_2.11.1_Linux.tar.gz
        cd ZAP_2.11.1
        ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout ../zap_report.html 
    id: DAST Scan using OWASP ZAP in GCP DevSecOps Pipeline

#Store Reports Generated by OWASP ZAP in GCP Cloud Bucket named ASecurityGuru
artifacts:
  objects:
    location: 'gs://asecurityguru'
    paths:
      - zap_report.html
