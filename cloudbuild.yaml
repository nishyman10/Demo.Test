steps:
  # Step 1: Checkout the source code
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/nishyman10/Demo.Test.git']

  # Step 2: Compile Java files
  - name: 'gcr.io/cloud-builders/mvn:3.9.1'
    args: ['compile', 'clean', 'install']

  # Step 3: Run SonarCloud analysis
  - name: 'sonarsource/sonar-scanner-cli'
    entrypoint: 'bash'
    dir: 'src/com/ibm/security/appscan/altoromutual'
    args:
      - '-c'
      - |
        sonar-scanner \
        -Dsonar.projectKey=nishyman10_Demo.Test \
        -Dsonar.organization=nishyman10 \
        -Dsonar.sources=src/com/ibm/security/appscan/altoromutual \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=30d7ea8abc8f6da04194590366dffd73cbec51f2 \
        -Dsonar.pullrequest.key=${_PR_NUMBER} \
        -Dsonar.pullrequest.branch=${_BRANCH_NAME} \
        -Dsonar.pullrequest.base=${_BASE_BRANCH_NAME} \
        -Dsonar.pullrequest.github.repository=nishyman10/Demo.Test
        
artifacts:
  # Define your build artifacts here, if any

#Run Software Composition Analysis (SCA security scan) using Snyk in GCP DevSecOps Pipeline
  - name: 'ubuntu'
    entrypoint: bash
    args: 
        - '-c'
        - |-
          apt-get update
          apt-get -y install maven 
          SNYK_TOKEN=${_SNYK_TOKEN}
          export SNYK_TOKEN
          mvn snyk:test -fn 
    id: SCA Scan using Snyk in GCP DevSecOps Pipeline

#Run DAST scan using OWASP ZAP in GCP DevSecOps Pipeline
  - name: 'ubuntu'
    entrypoint: bash
    args: 
      - '-c'
      - |-
        apt-get update
        apt-get -y install wget
        apt-get -y install default-jdk
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
        mkdir zap
        tar -xvf ZAP_2.11.1_Linux.tar.gz
        cd ZAP_2.11.1
        ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout ../zap_report.html 
    id: DAST Scan using OWASP ZAP in GCP DevSecOps Pipeline

#Store Reports Generated by OWASP ZAP in GCP Cloud Bucket named ASecurityGuru
artifacts:
  objects:
    location: 'gs://asecurityguru'
    paths:
      - zap_report.html
